{
  "openapi": "3.1.0",
  "info": {
    "title": "DSD Message service handler API",
    "description": "This is a pilot project for  implementing isa2 messaging REST API",
    "termsOfService": "https://www.eupl.eu/",
    "contact": {
      "name": "Test user"
    },
    "license": {
      "name": "EUPL 1.2",
      "url": "https://www.eupl.eu/"
    },
    "version": "v1.0",
    "summary": "DSD messaging rest service",
    "x-edel-lifecycle": {
      "maturity": "development"
    },
    "x-edel-publisher": {
      "name": "isa2 REST API pilot",
      "url": "https://ec.europa.eu/cefdigital/wiki/display/EDELCOMMUNITY/API+Core+Profile?focusedCommentId=385122967#comment-385122967"
    }
  },
  "externalDocs": {
    "description": "ISAÂ² IPS REST API Core Profile - OpenAPI Document Specification",
    "url": "https://ec.europa.eu/cefdigital/wiki/pages/viewpage.action?pageId=254313406"
  },
  "servers": [
    {
      "url": "http://localhost:8080/dsd-mock",
      "description": "Test server!"
    }
  ],
  "tags": [
    {
      "name": "DSD Organization REST Interface",
      "description": "DSD Organization REST Interface"
    }
  ],
  "paths": {
    "/v1/messaging/organization/query/{messageId}/sync": {
      "post": {
        "tags": [
          "DSD Organization REST Interface"
        ],
        "summary": "DSD Mock: REST Interface to query mock organizations",
        "description": "The Message Submission with Asynchronous Response of list of organizations.",
        "operationId": "organizationSearchMethodId",
        "parameters": [
          {
            "$ref": "#/components/parameters/Original-Sender"
          },
          {
            "$ref": "#/components/parameters/Final-Recipient"
          },
          {
            "$ref": "#/components/parameters/Timestamp"
          },
          {
            "$ref": "#/components/parameters/Edel-Message-Sig"
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The MessageId is the unique identifier of the message submitted. It MUST be defined by the client. It is used for reliable messaging for guaranteeing the at-most-once message submission (no duplicate message-ids are allowed by the server implementing the API).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "search-parameter": {
                    "title": "Organization query request",
                    "required": [
                      "country"
                    ],
                    "type": "object",
                    "properties": {
                      "country": {
                        "title": "ISO 3166 country parameter",
                        "type": "string",
                        "description": "ISO 3166 country parameter",
                        "example": "BE"
                      },
                      "name": {
                        "title": "Partial country name",
                        "type": "string",
                        "description": "Parameter is used for name search",
                        "example": "Company Name"
                      },
                      "limit": {
                        "title": "Result count limit",
                        "type": "integer",
                        "description": "The number of resources of a collection to be returned from a request. The limit MUST be a positive integer",
                        "format": "int32",
                        "example": 100,
                        "default": 100
                      },
                      "offset": {
                        "title": "Offset of results",
                        "type": "integer",
                        "description": "The offset the response should start providing resources of the collection. It MUST be a positive integer",
                        "format": "int32",
                        "example": 5,
                        "default": 0
                      },
                      "sort": {
                        "title": "Sort the records",
                        "type": "string",
                        "description": " Used to express the sorting order of resources in a collection. It MUST follow the following regular expression: (-|+)<field-name> (',' (-|+)<field-name>)*",
                        "example": "+name,-country",
                        "default": "0"
                      }
                    },
                    "description": "Object contains search parameters to retrieve organization list",
                    "$id": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../dsd/organization.query.schema.json",
                    "$schema": "https://json-schema.org/draft/2020-12/schema"
                  }
                }
              },
              "encoding": {
                "search-parameter": {
                  "contentType": "application/json",
                  "headers": {
                    "Edel-Payload-Sig": {
                      "$ref": "#/components/headers/Edel-Payload-Sig"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Multipart response",
            "headers": {
              "Original-Sender": {
                "$ref": "#/components/headers/Original-Sender"
              },
              "Final-Recipient": {
                "$ref": "#/components/headers/Final-Recipient"
              },
              "Timestamp": {
                "$ref": "#/components/headers/Timestamp"
              },
              "Edel-Message-Sig": {
                "$ref": "#/components/headers/Edel-Message-Sig"
              }
            },
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response-list": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "serviceEntities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrganizationRO"
                          }
                        },
                        "count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "page": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "encoding": {
                  "response-list": {
                    "contentType": "application/json",
                    "headers": {
                      "Edel-Payload-Sig": {
                        "$ref": "#/components/headers/Edel-Payload-Sig"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, size too large, invalid request message framing, or deceptive request routing)",
            "headers": {
              "Edel-Message-Sig": {
                "$ref": "#/components/headers/Edel-Message-Sig"
              }
            },
            "content": {
              "Problem": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                },
                "examples": {
                  "ValidationFailed": {
                    "value": {
                      "title": "Validation Failed",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/message-validation-failed",
                      "status": 400,
                      "detail": "Sent when the message fails the validation process"
                    }
                  },
                  "InvalidMessageId": {
                    "value": {
                      "title": "Invalid or Duplicate Message ID",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-message-id",
                      "status": 400,
                      "detail": "Sent when the MessageId is not valid"
                    }
                  },
                  "InvalidSignature": {
                    "value": {
                      "title": "Invalid Message Signature",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-message-signature",
                      "status": 400,
                      "detail": "Sent when the message signature cannot be verified"
                    }
                  },
                  "InvalidAddressing": {
                    "value": {
                      "title": "Invalid Addressing",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-addressing",
                      "status": 400,
                      "detail": "Sent when the Original Sender or Final Recipient(s) cannot be resolved"
                    }
                  },
                  "InvalidMessageFormat": {
                    "value": {
                      "title": "Invalid Message Format",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-format",
                      "status": 400,
                      "detail": "Sent when the message format does not adhere to the specification"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/messaging/organization/update/{messageId}": {
      "post": {
        "tags": [
          "DSD Organization REST Interface"
        ],
        "summary": "DSD Mock: REST Interface to update mock organizations",
        "description": "The Message Submission with Asynchronous Update request.",
        "operationId": "organizationUpdateMethodId",
        "parameters": [
          {
            "$ref": "#/components/parameters/Original-Sender"
          },
          {
            "$ref": "#/components/parameters/Final-Recipient"
          },
          {
            "$ref": "#/components/parameters/Timestamp"
          },
          {
            "$ref": "#/components/parameters/Edel-Message-Sig"
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The MessageId is the unique identifier of the message submitted. It MUST be defined by the client. It is used for reliable messaging for guaranteeing the at-most-once message submission (no duplicate message-ids are allowed by the server implementing the API).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "update-organization": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "index": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "prefLabels": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "altLabels": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "classifications": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "address": {
                        "$ref": "#/components/schemas/AddressRO"
                      }
                    }
                  }
                }
              },
              "encoding": {
                "update-organization": {
                  "contentType": "application/json",
                  "headers": {
                    "Edel-Payload-Sig": {
                      "$ref": "#/components/headers/Edel-Payload-Sig"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Sent when the message is properly validated and received.",
            "headers": {
              "Original-Sender": {
                "$ref": "#/components/headers/Original-Sender"
              },
              "Final-Recipient": {
                "$ref": "#/components/headers/Final-Recipient"
              },
              "Timestamp": {
                "$ref": "#/components/headers/Timestamp"
              },
              "Edel-Message-Sig": {
                "$ref": "#/components/headers/Edel-Message-Sig"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalMessage"
                },
                "example": {
                  "title": "Message Accepted",
                  "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/message-accepted",
                  "status": 202,
                  "detail": "Sent when the message is properly validated. It may include a status monitor that can provide the user with an estimate of when the request will be fulfilled (see [RFC7231])",
                  "instance": "/my-service/my-action/dde12f67-c391-4851-8fa2-c07dd8532efd",
                  "digest": "sha-256=eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ"
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, size too large, invalid request message framing, or deceptive request routing)",
            "headers": {
              "Edel-Message-Sig": {
                "$ref": "#/components/headers/Edel-Message-Sig"
              }
            },
            "content": {
              "Problem": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                },
                "examples": {
                  "ValidationFailed": {
                    "value": {
                      "title": "Validation Failed",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/message-validation-failed",
                      "status": 400,
                      "detail": "Sent when the message fails the validation process"
                    }
                  },
                  "InvalidMessageId": {
                    "value": {
                      "title": "Invalid or Duplicate Message ID",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-message-id",
                      "status": 400,
                      "detail": "Sent when the MessageId is not valid"
                    }
                  },
                  "InvalidSignature": {
                    "value": {
                      "title": "Invalid Message Signature",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-message-signature",
                      "status": 400,
                      "detail": "Sent when the message signature cannot be verified"
                    }
                  },
                  "InvalidAddressing": {
                    "value": {
                      "title": "Invalid Addressing",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-addressing",
                      "status": 400,
                      "detail": "Sent when the Original Sender or Final Recipient(s) cannot be resolved"
                    }
                  },
                  "InvalidMessageFormat": {
                    "value": {
                      "title": "Invalid Message Format",
                      "type": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging/signal/invalid-format",
                      "status": 400,
                      "detail": "Sent when the message format does not adhere to the specification"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "jws-compact-detached": {
        "title": "The message-level and payload signature",
        "pattern": "^[A-Za-z0-9_-]+(?:\\.[A-Za-z0-9_-]+){2}$",
        "type": "string",
        "description": "The JWS compact representation schema defines the string pattern as a regular expression, denoting the structure a JWS compact token MUST follow to be a valid compact JWS Representation. It is used for defining the value of the message-level signature and of the payload signature",
        "format": "jws-compact-detached"
      },
      "OrganizationQuery": {
        "title": "Organization query request",
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "title": "ISO 3166 country parameter",
            "type": "string",
            "description": "ISO 3166 country parameter",
            "example": "BE"
          },
          "name": {
            "title": "Partial country name",
            "type": "string",
            "description": "Parameter is used for name search",
            "example": "Company Name"
          },
          "limit": {
            "title": "Result count limit",
            "type": "integer",
            "description": "The number of resources of a collection to be returned from a request. The limit MUST be a positive integer",
            "format": "int32",
            "example": 100,
            "default": 100
          },
          "offset": {
            "title": "Offset of results",
            "type": "integer",
            "description": "The offset the response should start providing resources of the collection. It MUST be a positive integer",
            "format": "int32",
            "example": 5,
            "default": 0
          },
          "sort": {
            "title": "Sort the records",
            "type": "string",
            "description": " Used to express the sorting order of resources in a collection. It MUST follow the following regular expression: (-|+)<field-name> (',' (-|+)<field-name>)*",
            "example": "+name,-country",
            "default": "0"
          }
        },
        "description": "Object contains search parameters to retrieve organization list",
        "$id": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../dsd/organization.query.schema.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema"
      },
      "AddressRO": {
        "type": "object",
        "properties": {
          "adminUnitLevel": {
            "type": "string"
          },
          "fullAddress": {
            "type": "string"
          }
        }
      },
      "OrganizationRO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "identifier": {
            "type": "string"
          },
          "prefLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "altLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "classifications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "address": {
            "$ref": "#/components/schemas/AddressRO"
          }
        }
      },
      "OrganizationSearchResult": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "serviceEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationRO"
            }
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Problem": {
        "title": "A Problem Details object (RFC 7807) defined by the ISAÂ² IPS REST API Core Profile",
        "required": [
          "status",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "A short summary of the problem type, written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
            "example": "Service Unavailable"
          },
          "type": {
            "type": "string",
            "description": "An URI reference that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g. using HTML)",
            "format": "uri",
            "default": "about:blank"
          },
          "status": {
            "maximum": 600,
            "exclusiveMaximum": true,
            "minimum": 200,
            "type": "integer",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "example": 503
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "format": "string"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yieldfurther information if dereferenced.",
            "format": "uri-reference"
          }
        },
        "description": "A Problem Details object (RFC 7807) with ISAÂ² IPS REST API extensions, used for signals (responses) to messages",
        "$id": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging.schema.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema"
      },
      "SignalMessage": {
        "title": "A Signal message which extends Problem object (RFC 7807) defined by the ISAÂ² IPS REST API Core Profile",
        "required": [
          "instance",
          "status",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "A short summary of the problem type, written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
            "example": "Service Unavailable"
          },
          "type": {
            "type": "string",
            "description": "An URI reference that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g. using HTML)",
            "format": "uri",
            "default": "about:blank"
          },
          "status": {
            "maximum": 600,
            "exclusiveMaximum": true,
            "minimum": 200,
            "type": "integer",
            "description": "The HTTP status code generated by the origin server for this occurrence of the ",
            "format": "int32",
            "example": 503
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "format": "string"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the  It may or may not yieldfurther information if dereferenced.",
            "format": "uri-reference"
          },
          "digest": {
            "type": "string",
            "description": "The digest of the received message using the notation proposed in 'Digest Header' (https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-digest-headers)",
            "format": "uri-reference",
            "example": "sha-256=4REjxQ4yrqUVicfSKYNO/cF9zNj5ANbzgDZt3/h3Qxo="
          }
        },
        "description": "A Signal message which extends Problem object (RFC 7807) defined by the ISAÂ² IPS REST API Core Profile",
        "$id": "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging.schema.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema"
      }
    },
    "parameters": {
      "Original-Sender": {
        "name": "Original-Sender",
        "in": "header",
        "description": "The Original Sender represents the authenticated entity acting as the user that sends the message using the client. Following the API Core Profile, the original sender MUST be represented with an OpenID Connect token, in the form of Compact JWT Token.",
        "schema": {
          "$ref": "#/components/schemas/jws-compact-detached"
        }
      },
      "Final-Recipient": {
        "name": "Final-Recipient",
        "in": "header",
        "description": "The Final Recipient is the entity for whom the message is sent. Can be a single identifier or a set of identifiers, as described in the Recipient Addressing Schemes section of the specification. The representation of the final recipient is out of scope of the current specification.",
        "schema": {
          "type": "string"
        }
      },
      "Timestamp": {
        "name": "Timestamp",
        "in": "header",
        "description": "The Timestamp is the exact date and time at which the message was sent. It is provided by the client and verified by the server.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "Edel-Message-Sig": {
        "name": "Edel-Message-Sig",
        "in": "header",
        "description": "The Edel-Message-Sig carries the signature of the HTTP Message following the API Core Profile on Message-Level Security. Following the light context constraints, the signature is optional for the client messages, but is RECOMMENDED for server messages.",
        "schema": {
          "$ref": "#/components/schemas/jws-compact-detached"
        }
      }
    },
    "headers": {
      "Edel-Payload-Sig": {
        "description": "The Edel-Payload-Sig carries the signature of a subpart of the Multipart message (see User Message section) following the API Core Profile on Payload Security.",
        "schema": {
          "$ref": "#/components/schemas/jws-compact-detached"
        }
      },
      "Original-Sender": {
        "description": "The Original Sender represents the authenticated entity acting as the user that sends the message using the client. Following the API Core Profile, the original sender MUST be represented with an OpenID Connect token, in the form of Compact JWT Token.",
        "schema": {
          "$ref": "#/components/schemas/jws-compact-detached"
        }
      },
      "Final-Recipient": {
        "description": "The Final Recipient is the entity for whom the message is sent. Can be a single identifier or a set of identifiers, as described in the Recipient Addressing Schemes section of the specification. The representation of the final recipient is out of scope of the current specification.",
        "schema": {
          "type": "string"
        }
      },
      "Timestamp": {
        "description": "The Timestamp is the exact date and time at which the message was sent. It is provided by the client and verified by the server.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "Edel-Message-Sig": {
        "description": "The Edel-Message-Sig carries the signature of the HTTP Message following the API Core Profile on Message-Level Security. Following the light context constraints, the signature is optional for the client messages, but is RECOMMENDED for server messages.",
        "schema": {
          "$ref": "#/components/schemas/jws-compact-detached"
        }
      }
    }
  }
}