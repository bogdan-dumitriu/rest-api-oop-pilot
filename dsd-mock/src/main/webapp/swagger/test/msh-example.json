{
  "openapi": "3.1.0",
  "info": {
    "title": "DSD Message service handler API",
    "description": "This is a pilot project for  implementing isa2 messaging REST API",
    "termsOfService": "https://www.eupl.eu/",
    "license": {
      "name": "EUPL 1.2",
      "url": "https://www.eupl.eu/"
    },
    "version": "v1.0",
    "summary": "DSD messaging rest service",
    "x-edel-lifecycle": {
      "maturity": "development"
    },
    "x-edel-publisher": {
      "name": "isa2 REST API pilot",
      "url": "https://ec.europa.eu/cefdigital/wiki/display/EDELCOMMUNITY/API+Core+Profile?focusedCommentId=385122967#comment-385122967"
    }
  },
  "externalDocs": {
    "description": "ISAÂ² IPS REST API Core Profile - OpenAPI Document Specification",
    "url": "https://ec.europa.eu/cefdigital/wiki/pages/viewpage.action?pageId=254313406"
  },
  "servers": [
    {
      "url": "http://localhost:8080/dsd-mock",
      "description": "Test server!"
    }
  ],
  "paths": {
    "/v1/messaging/{service}/{action}/{messageId}": {
      "post": {
        "tags": [
          "Message Submission Endpoints"
        ],
        "summary": "Asynchronous Message Submission Endpoint",
        "description": "The Message submission endpoint is the main endpoint of the messaging API. It provides the endpoint to which a client sends the message, as created by the original sender.",
        "operationId": "AsynchronousMessageSubmission",
        "parameters": [
          {"$ref": "#/components/parameters/service"},
          { "$ref": "#/components/parameters/action"},
          { "$ref": "#/components/parameters/messageId"}
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PayloadBody"
              },
              "encoding": {
                "*": {
                  "headers": {
                    "edel-payload-sig": {
                      "$ref": "#/components/headers/edel-payload-sig",
                      "required": true,
                      "style": "simple"
                    }
                  }
                }
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/PayloadBody"
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/PayloadBody"
              },
              "encoding": {
                "*": {
                  "headers": {
                    "edel-payload-sig": {
                      "$ref": "#/components/headers/edel-payload-sig",
                      "required": true,
                      "style": "simple"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PayloadBody": {
        "type": "object",
        "properties": {
          "payloads": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      }
    },
    "parameters": {
      "service": {
        "name": "service",
        "in": "path",
        "description": "A representation of the service the message is submitted to",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "action": {
        "name": "action",
        "in": "path",
        "description": "A representation of the action related to the service the message is submitted to",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "messageId": {
        "name": "messageId",
        "in": "path",
        "description": "The Identification of the message submitted. It MUST be generated by the client submitting the message",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "OriginalSender": {
        "description": "The representation of the Original Sender",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "FinalRecipient": {
        "description": "The representation of Final Recipient(s)",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "edel-message-sig": {
        "description": "Message signature header",
        "schema": {
          "title": "The message-level and payload signature",
          "pattern": "^[A-Za-z0-9_-]+(?:\\.[A-Za-z0-9_-]+){2}$",
          "type": "string",
          "description": "The JWS compact representation schema defines the string pattern as a regular expression, denoting the structure a JWS compact token MUST follow to be a valid compact JWS Representation. It is used for defining the value of the message-level signature and of the payload signature",
          "format": "jws-compact-detached"
        }
      },
      "Response-Webhook": {
        "description": "The URL to which the Server will send the response",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "Signal-Webhook": {
        "description": "The URL to which the Server will send the signal that the response is ready",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "edel-payload-sig": {
        "description": "Payload signature header",
        "schema": {
          "title": "The message-level and payload signature",
          "pattern": "^[A-Za-z0-9_-]+(?:\\.[A-Za-z0-9_-]+){2}$",
          "type": "string",
          "description": "The JWS compact representation schema defines the string pattern as a regular expression, denoting the structure a JWS compact token MUST follow to be a valid compact JWS Representation. It is used for defining the value of the message-level signature and of the payload signature",
          "format": "jws-compact-detached"
        }
      }
    }
  }
}
